# src/main/resources/graphql/schema.graphql

# Define the Employee type
type Employee {
    id: ID!
    name: String!
    department: Department
    addresses: [Address]
}

# Define the Address type
type Address {
    id: ID!
    street: String!
    city: String!
}

# Define the Department type
type Department {
    id: ID!
    name: String!
}
input EmployeeFilter {
    createdBy: String
    createdOn: String
    departmentName: String
    addressCity: String
}

enum SortDirection {
    ASC
    DESC
}

input EmployeeSort {
    field: String
    direction: SortDirection
}
# Queries to fetch data
type Query {
    getEmployee(id: ID!): Employee
    getDepartment(id: ID!): Department
    getAddress(id: ID!): Address
    employees(filter: EmployeeFilter, sort: EmployeeSort): [Employee]
}

# Mutations to modify data
type Mutation {
    createEmployee(name: String!, departmentId: ID!): Employee
    updateEmployee(id: ID!, name: String, departmentId: ID): Employee
    deleteEmployee(id: ID!): Boolean

    createAddress(street: String!, city: String!, employeeId: ID!): Address
    updateAddress(id: ID!, street: String, city: String): Address
    deleteAddress(id: ID!): Boolean

    createDepartment(name: String!): Department
    updateDepartment(id: ID!, name: String): Department
    deleteDepartment(id: ID!): Boolean
}



